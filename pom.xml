<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cgy</groupId>
    <artifactId>maven-filter-profile</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.21</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <profiles>
        <!--开发环境-->
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
                <name2>devName</name2>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!--测试环境-->
        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
                <name2>testName</name2>
            </properties>
        </profile>
        <!--生产环境-->
        <profile>
            <id>product</id>
            <properties>
                <env>product</env>
                <name2>productName</name2>
            </properties>
        </profile>
    </profiles>

    <build>
        <!-- 如果想让外部resource文件打包，可以配置在这，默认maven找src/main/resources下面的文件 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!-- 只包含下面的文件 -->
                <!--<includes>-->
                <!--<include>**/spring*.xml</include>-->
                <!--<include>properties/*</include>-->
                <!--</includes>-->
                <!-- 排除所有的txt文件 -->
                <!--<excludes>-->
                <!--<exclude>**/*.txt</exclude>-->
                <!--</excludes>-->
                <!-- 是否替换扫描的resouce的${}内容。默认false -->
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/conf/${env}</directory>
                <!-- copy到目标目录 -->
                <targetPath>${basedir}/target/classes/properties</targetPath>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <encoding>utf-8</encoding>
                    <!-- 如果开启filtering，对配置文件中以 \开头的 ${}内容不进行替换-->
                    <escapeString>\</escapeString>
                    <!--
                        默认只对jpg、jpeg、gif、bmp以及png结果的二进制文件不做过滤
                        如果你想自定义一些文件不被过滤，可以在这里统一指定，比如pdf、swf等
                    -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
                        <nonFilteredFileExtension>swf</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>

            <!-- 该插件用于将Scala代码编译成class文件 -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <!-- 声明绑定到maven的compile阶段 -->
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>


</project>